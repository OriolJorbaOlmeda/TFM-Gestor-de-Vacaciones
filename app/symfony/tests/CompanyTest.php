<?php

use App\Entity\Calendar;
use App\Entity\Company;
use App\Entity\Department;
use PHPUnit\Framework\TestCase;

class CompanyTest extends TestCase
{
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->company = new Company();
    }

    public function testSettingCompanyName(){
        $name = 'La Salle';
        $this->company->setName($name);

        $this->assertEquals($name, $this->company->getName());
    }

    public function testSettingCompanyDirection(){
        $direction = 'Carrer de la Salle';
        $this->company->setDirection($direction);

        $this->assertEquals($direction, $this->company->getDirection());
    }

    public function testSettingCompanyPostalCode(){
        $postal = '08222';
        $this->company->setPostalCode($postal);

        $this->assertEquals($postal, $this->company->getPostalCode());
    }

    public function testSettingCompanyCif(){
        $cif = 'cif';
        $this->company->setCif($cif);

        $this->assertEquals($cif, $this->company->getCif());
    }

    public function testSettingPhone(){
        $phone = '66666666';
        $this->company->setTelefono($phone);

        $this->assertEquals($phone, $this->company->getTelefono());
    }

    public function testSettingDepartment(){
        $department = new Department;
        $this->company->addDepartment($department);

        $this->assertTrue($this->company->getDepartments()->contains($department));
    }

    public function testRemovingCompanyDepartment(){
        $department = new Department();
        $this->company->addDepartment($department);
        $this->company->removeDepartment($department);

        $this->assertEmpty($this->company->getDepartments());
    }

    public function testSettingCalendar(){
        $calendar = new Calendar();
        $this->company->addCalendar($calendar);

        $this->assertTrue($this->company->getCalendars()->contains($calendar));
    }

    public function testRemovingCompanyCalendar(){
        $calendar = new Calendar();
        $this->company->addCalendar($calendar);
        $this->company->removeCalendar($calendar);

        $this->assertEmpty($this->company->getCalendars());
    }
}