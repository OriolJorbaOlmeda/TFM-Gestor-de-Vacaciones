<?php

use App\Entity\Department;
use App\Entity\User;
use PHPUnit\Framework\TestCase;


class UserTest extends TestCase
{
    protected $user;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->user = new User();
    }

    public function testSettingUserName(){
        $name = 'Robert';
        $this->user->setName($name);

        $this->assertEquals($name, $this->user->getName());
    }

    public function testSettingUserLastName(){
        $lastname = 'Marcos';
        $this->user->setLastname($lastname);

        $this->assertEquals($lastname, $this->user->getLastname());
    }

    public function testSettingUserDirction(){
        $direction = 'Carrer Soler i Palet';
        $this->user->setDirection($direction);

        $this->assertEquals($direction, $this->user->getDirection());
    }

    public function testSettingUserCity(){
        $city = 'Terrassa';
        $this->user->setCity($city);

        $this->assertEquals($city, $this->user->getCity());
    }

    public function testSettingProvince(){
        $province = 'Barcelona';
        $this->user->setProvince($province);

        $this->assertEquals($province, $this->user->getProvince());
    }

    public function testSettingPostalcode(){
        $postal = '08222';
        $this->user->setPostalcode($postal);

        $this->assertEquals($postal, $this->user->getPostalcode());
    }

    public function testSettingVacations(){
        $vacation = '25';
        $this->user->setTotalVacationDays($vacation);

        $this->assertEquals($vacation, $this->user->getTotalVacationDays());
    }

    public function testSettingPending(){
        $pending = '25';
        $this->user->setPendingVacationDays($pending);

        $this->assertEquals($pending, $this->user->getPendingVacationDays());
    }

    public function testSettingEmail(){
        $email = 'robert23@gmail.com';
        $this->user->setEmail($email);

        $this->assertEquals($email, $this->user->getEmail());
    }

    public function testSettingRole(){
        $role = ["ROLE_EMPLEADO"];
        $this->user->setRoles($role);

        $this->assertEquals($role, $this->user->getRoles());
    }

    public function testSettingPassword(){
        $password = 'password';
        $this->user->setPassword($password);

        $this->assertEquals($password, $this->user->getPassword());
    }

    public function testSettingDepartment(){
        $department = new Department();
        $this->user->setDepartment($department);

        $this->assertEquals($department, $this->user->getDepartment());
    }

    public function testSettingSupervisor(){
        $supervisor = new User();
        $this->user->setSupervisor($supervisor);

        $this->assertEquals($supervisor, $this->user->getSupervisor());
    }


}